[{"C:\\Users\\shiva\\OneDrive\\Desktop\\hydrateq\\src\\index.js":"1","C:\\Users\\shiva\\OneDrive\\Desktop\\hydrateq\\src\\App.js":"2","C:\\Users\\shiva\\OneDrive\\Desktop\\hydrateq\\src\\screens\\Onbording.js":"3","C:\\Users\\shiva\\OneDrive\\Desktop\\hydrateq\\src\\components\\Projects.js":"4","C:\\Users\\shiva\\OneDrive\\Desktop\\hydrateq\\src\\screens\\ProjectScreen.js":"5","C:\\Users\\shiva\\OneDrive\\Desktop\\hydrateq\\src\\screens\\Home.js":"6","C:\\Users\\shiva\\OneDrive\\Desktop\\hydrateq\\src\\screens\\NotFound.js":"7","C:\\Users\\shiva\\OneDrive\\Desktop\\hydrateq\\src\\components\\GraphButtons.js":"8","C:\\Users\\shiva\\OneDrive\\Desktop\\hydrateq\\src\\components\\Sidebar.js":"9","C:\\Users\\shiva\\OneDrive\\Desktop\\hydrateq\\src\\components\\Header.js":"10","C:\\Users\\shiva\\OneDrive\\Desktop\\hydrateq\\src\\components\\Graph.js":"11","C:\\Users\\shiva\\OneDrive\\Desktop\\hydrateq\\src\\components\\Statistics.js":"12","C:\\Users\\shiva\\OneDrive\\Desktop\\hydrateq\\src\\components\\GraphImage.js":"13","C:\\Users\\shiva\\OneDrive\\Desktop\\hydrateq\\src\\screens\\Analysis.js":"14","C:\\Users\\shiva\\OneDrive\\Desktop\\hydrateq\\src\\components\\NewSidebar.js":"15","C:\\Users\\shiva\\OneDrive\\Desktop\\hydrateq\\src\\components\\Interpretaion.js":"16","C:\\Users\\shiva\\OneDrive\\Desktop\\hydrateq\\src\\components\\Dropzone.js":"17","C:\\Users\\shiva\\OneDrive\\Desktop\\hydrateq\\src\\components\\Imagelist.js":"18","C:\\Users\\shiva\\OneDrive\\Desktop\\hydrateq\\src\\components\\ButtonSelectGraph.js":"19","C:\\Users\\shiva\\OneDrive\\Desktop\\hydrateq\\src\\screens\\Prafull.js":"20"},{"size":366,"mtime":1660478717956,"results":"21","hashOfConfig":"22"},{"size":844,"mtime":1660478467343,"results":"23","hashOfConfig":"22"},{"size":731,"mtime":1660387554366,"results":"24","hashOfConfig":"22"},{"size":3645,"mtime":1660452055313,"results":"25","hashOfConfig":"22"},{"size":1154,"mtime":1660477353841,"results":"26","hashOfConfig":"22"},{"size":154,"mtime":1660215866236,"results":"27","hashOfConfig":"22"},{"size":125,"mtime":1660214897875,"results":"28","hashOfConfig":"22"},{"size":115,"mtime":1660285835108,"results":"29","hashOfConfig":"22"},{"size":5072,"mtime":1660387974509,"results":"30","hashOfConfig":"22"},{"size":1670,"mtime":1660387766532,"results":"31","hashOfConfig":"22"},{"size":2246,"mtime":1660451577942,"results":"32","hashOfConfig":"22"},{"size":5271,"mtime":1660503726544,"results":"33","hashOfConfig":"22"},{"size":2250,"mtime":1660502548054,"results":"34","hashOfConfig":"22"},{"size":2520,"mtime":1660484204979,"results":"35","hashOfConfig":"22"},{"size":1527,"mtime":1660456407054,"results":"36","hashOfConfig":"22"},{"size":1173,"mtime":1660467175168,"results":"37","hashOfConfig":"22"},{"size":1186,"mtime":1660476712223,"results":"38","hashOfConfig":"22"},{"size":650,"mtime":1660476712224,"results":"39","hashOfConfig":"22"},{"size":218,"mtime":1660476712221,"results":"40","hashOfConfig":"22"},{"size":3407,"mtime":1660478443660,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"6o1d76",{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"44"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"44"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"44"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"44"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"44"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"44"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"44"},"C:\\Users\\shiva\\OneDrive\\Desktop\\hydrateq\\src\\index.js",[],["91","92"],"C:\\Users\\shiva\\OneDrive\\Desktop\\hydrateq\\src\\App.js",["93","94","95","96"],"import React from \"react\";\r\nimport { Onbording } from \"./screens/Onbording\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Routes,\r\n  Route,\r\n  Link\r\n} from \"react-router-dom\";\r\nimport Projects from \"./components/Projects\";\r\nimport { Home } from \"./screens/Home\";\r\nimport ProjectScreen from \"./screens/ProjectScreen\";\r\nimport NotFound from \"./screens/NotFound\";\r\nimport Prafull from \"./screens/Prafull\";\r\nimport Analysis from \"./screens/Analysis\";\r\nfunction App() {\r\n  return (\r\n    <div>\r\n      <Routes>\r\n        <Route exact path=\"/\" element={<Home/>}/>\r\n        <Route  path=\"/project/:id\" element={ <ProjectScreen/>} />\r\n        <Route path=\"/analysis/:id\" element={<Analysis/>}/>\r\n        <Route path=\"/prafull\" element={<Prafull/>}/>\r\n        <Route path=\"*\" element={<NotFound/>}/>\r\n        </Routes>\r\n    </div>\r\n  )\r\n}\r\nexport default App\r\n","C:\\Users\\shiva\\OneDrive\\Desktop\\hydrateq\\src\\screens\\Onbording.js",[],"C:\\Users\\shiva\\OneDrive\\Desktop\\hydrateq\\src\\components\\Projects.js",[],"C:\\Users\\shiva\\OneDrive\\Desktop\\hydrateq\\src\\screens\\ProjectScreen.js",["97","98","99","100","101","102","103","104","105","106"],"import React ,{useEffect ,useState}from 'react'\r\nimport axios from \"axios\";\r\nimport { useParams } from 'react-router-dom';\r\n\r\nimport {Box ,Stack ,Button} from \"@mui/material\";\r\nimport clsx from \"clsx\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nimport { CssBaseline, ThemeProvider} from \"@material-ui/core\";\r\n\r\nimport Header from \"../components/Header\";\r\nimport Sidebar from \"../components/Sidebar\";\r\nimport Graph from '../components/Graph';\r\nimport Statistics from '../components/Statistics';\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nconst ProjectScreen = () => {\r\n  const handleRoute = (id) => {\r\n    console.log(\"route\", id)\r\n    navigate(`/analysis/${id}`); //clicked \r\n  }\r\n  const navigate = useNavigate();\r\n  const params = useParams();\r\n  const [pro,setPro] = React.useState({}); \r\n  useEffect(() => {\r\n    axios.get(`http://sih-hydrateq.herokuapp.com/project/${params.id}`)\r\n      .then(response =>{ setPro(response.data)\r\n      });\r\n  }, [params.id]);\r\n  console.log(pro)\r\n  return ( \r\n    <Stack>\r\n    <Button onClick={() => handleRoute(params.id)}>Analysis</Button>\r\n    </Stack>\r\n  )\r\n}\r\nexport default ProjectScreen","C:\\Users\\shiva\\OneDrive\\Desktop\\hydrateq\\src\\screens\\Home.js",[],"C:\\Users\\shiva\\OneDrive\\Desktop\\hydrateq\\src\\screens\\NotFound.js",[],"C:\\Users\\shiva\\OneDrive\\Desktop\\hydrateq\\src\\components\\GraphButtons.js",[],["107","108"],"C:\\Users\\shiva\\OneDrive\\Desktop\\hydrateq\\src\\components\\Sidebar.js",["109","110"],"import React, { useState } from \"react\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\n// import IconButton from \"@material-ui/core/IconButton\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\n// import MailIcon from \"@mui/icons-material/Mail\";\r\nimport ChevronLeftIcon from \"@mui/icons-material/ChevronLeft\";\r\n// import DashboardIcon from \"@mui/icons-material/Dashboard\";\r\n// import DevicesIcon from \"@mui/icons-material/Devices\";\r\n// import EventIcon from \"@mui/icons-material/Event\";\r\n// import ExploreIcon from \"@mui/icons-material/Explore\";\r\n// import FavoriteIcon from \"@mui/icons-material/Favorite\";\r\nimport SettingsIcon from \"@mui/icons-material/Settings\";\r\nimport { Button } from \"@mui/material\";\r\nimport UploadFileIcon from '@mui/icons-material/UploadFile';\r\nimport axios from \"axios\"\r\nconst drawerWidth = 220;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n    \r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n    backgroundColor: \"#0295A9\",\r\n    color: \"  #FFFFFF\",\r\n  },\r\n  drawerHeader: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    padding: theme.spacing(0, 1),\r\n    ...theme.mixins.toolbar,\r\n    justifyContent: \"flex-end\",\r\n   \r\n  }\r\n}));\r\nexport default function Sidebar({ open, handleDrawerClose , project_id ,statistics}) {\r\nconst [State , setState] = useState(null)\r\n// const submit =() =>{\r\n//   console.log(state)\r\n//   axios.post(`https://sih-hydrateq.herokuapp.com/csv/${project_id}`, state)\r\n//   .then(res => { \r\n//       console.log(res.data)})\r\n// }\r\nconst handleSubmit = async (event) => { // Reset status\r\n  const data = {\r\n    name : \"file\" ,\r\n    file: State\r\n  }\r\n  event.preventDefault();\r\n  const resp = await axios.post(`http://127.0.0.1:5000/csv/${project_id}`, data, {\r\n    headers: {\r\n      \"content-type\": \"multipart/form-data\",\r\n    },\r\n  });\r\n  // console.log(resp.data);\r\n  statistics(resp.data);\r\n};\r\nconst handleInputChange =(e)  =>{\r\n    setState(e.target.files[0])\r\n}\r\n\r\n  const classes = useStyles();\r\n  return (\r\n    <Drawer\r\n      className={classes.drawer}\r\n      variant=\"persistent\"\r\n      anchor=\"left\"\r\n      open={open}\r\n      classes={{\r\n        paper: classes.drawerPaper\r\n      }}\r\n    >\r\n      <div className={classes.drawerHeader}>\r\n        {/* <IconButton onClick={handleDrawerClose}>\r\n          <ChevronLeftIcon />\r\n        </IconButton> */}\r\n      </div>\r\n      <Divider />\r\n      <div className=\"\">\r\n        {/* <List>\r\n          <ListItem button>\r\n            <ListItemIcon>\r\n              <DashboardIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Dashboard\" />\r\n          </ListItem>\r\n          <ListItem button>\r\n            <ListItemIcon>\r\n              <MailIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Mail\" />\r\n          </ListItem>\r\n\r\n          <ListItem button>\r\n            <ListItemIcon>\r\n              <EventIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Events\" />\r\n          </ListItem>\r\n          <ListItem button>\r\n            <ListItemIcon>\r\n              <ExploreIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Explore\" />\r\n          </ListItem>\r\n          <ListItem button>\r\n            <ListItemIcon>\r\n              <FavoriteIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Favorites\" />\r\n          </ListItem>\r\n        </List> */}\r\n        <Divider />\r\n        <List>\r\n          {/* <ListItem button>\r\n            <ListItemIcon>\r\n              <DevicesIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Devices\" />\r\n          </ListItem> */}\r\n          <ListItem button>\r\n            <ListItemIcon>\r\n              <SettingsIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Settings\" />\r\n          </ListItem>\r\n          <ListItem button onClick={handleDrawerClose} >\r\n            <ListItemIcon  >\r\n\r\n              <ChevronLeftIcon />\r\n\r\n            </ListItemIcon >\r\n            <ListItemText primary=\"Back\" />\r\n          </ListItem>\r\n        </List>\r\n        <Divider />\r\n        <List>\r\n        <form onSubmit={handleSubmit}>\r\n          <ListItem>\r\n          {/* <ListItemIcon button >          \r\n         < UploadFileIcon/>\r\n            </ListItemIcon> */}\r\n              <input\r\n                type=\"file\"\r\n                onChange={handleInputChange}\r\n                inputProps={{\r\n                  accept:\r\n                    \".csv, application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel\",\r\n                }}\r\n              />\r\n          </ListItem>\r\n          <ListItem>\r\n          <button type=\"submit\">Save</button>\r\n          </ListItem>\r\n          </form>\r\n        </List>\r\n      </div>\r\n    </Drawer>\r\n  );\r\n}\r\n","C:\\Users\\shiva\\OneDrive\\Desktop\\hydrateq\\src\\components\\Header.js",[],"C:\\Users\\shiva\\OneDrive\\Desktop\\hydrateq\\src\\components\\Graph.js",["111","112","113","114","115"],"import React, { useState } from 'react'\r\nimport { Stack, Button ,Card} from '@mui/material'\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport FormGroup from '@mui/material/FormGroup';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport GraphImage from './GraphImage';\r\nimport CardMedia from '@mui/material/CardMedia';\r\nimport AddchartIcon from '@mui/icons-material/Addchart';\r\nimport axios from \"axios\";\r\nconst Graph = (props) => {\r\n  const [image, setImage] = useState(\"gibbsDiagram\");\r\n  const [imageUrl, setImageUrl] = useState('');\r\n  const [display, setDisplay] = useState(false);\r\n  \r\n  const handeleClick = (item) => {\r\n    setImage(item);\r\n    axios.get(`http://localhost:5000/graph/${image}/${props.project_id}`)\r\n      .then(response => {\r\n        setDisplay(true);\r\n        setImageUrl(`http://localhost:5000/graph/${image}/${props.project_id}`)\r\n      }).catch(error => {\r\n        console.log(error)\r\n      }\r\n      )\r\n  }\r\n  console.log(image)\r\nreturn (\r\n  <Stack>\r\n    <Stack direction=\"row\" spacing={1} m={1}>\r\n      {graphs.map((item, index) => {\r\n        return (\r\n          <Button key={index}\r\n            variant=\"contained\"\r\n            style={{ backgroundColor: \"#FDD037\", }}\r\n            onClick={() => { handeleClick(item) }}\r\n            // color=\"#FDD037\"\r\n            startIcon={<AddchartIcon />}\r\n          >\r\n            {item}\r\n          </Button>)\r\n      }\r\n      )}\r\n    </Stack>\r\n\r\n\r\n\r\n     {display?\r\n     \r\n     \r\n     \r\n     <Card sx={{ maxWidth: 300 }}>\r\n      {/* <img\r\n        src={imageUrl}\r\n        alt={image}\r\n      /> */}\r\n      <CardMedia\r\n                  style={{\r\n                    width: \"auto\",\r\n                    maxHeight: \"200px\"\r\n                  }}\r\n                  component=\"img\"\r\n                  image={imageUrl}\r\n                  title={ image}\r\n                />\r\n    </Card>\r\n    \r\n    \r\n    :\"\"}\r\n  </Stack>\r\n)\r\n}\r\n\r\nconst graphs = [\r\n  \"color_piper\",\r\n  \"gibbsDiagram\",\r\n  \"trianglePiperDaigram\",\r\n  // \"rectangle_piper\",\r\n  \"chadha\",\r\n  \"chernoff\",\r\n  \"color_piper\",\r\n  // \"contour_piper\",\r\n  \"durvo\",\r\n  // \"gaillardet\",\r\n  // \"hfed\",\r\n  // \"schoeller\",\r\n  \"stiff\"\r\n]\r\nexport default Graph","C:\\Users\\shiva\\OneDrive\\Desktop\\hydrateq\\src\\components\\Statistics.js",[],"C:\\Users\\shiva\\OneDrive\\Desktop\\hydrateq\\src\\components\\GraphImage.js",["116","117","118"],"C:\\Users\\shiva\\OneDrive\\Desktop\\hydrateq\\src\\screens\\Analysis.js",["119","120"],"import React, { useEffect } from 'react'\r\nimport axios from \"axios\";\r\nimport { useParams } from 'react-router-dom';\r\nimport { styled } from '@mui/material/styles';\r\nimport Box from '@mui/material/Box';\r\nimport Paper from '@mui/material/Paper';\r\nimport Grid from '@mui/material/Grid';\r\nimport { Stack } from '@mui/system';\r\nimport { Typography } from '@mui/material';\r\nimport NewSidebar from '../components/NewSidebar';\r\nimport GraphImage from '../components/GraphImage';\r\nimport Interpretaion from '../components/Interpretaion';\r\nimport Statistics from '../components/Statistics';\r\nconst Analysis = () => {\r\n  // const navigate = useNavigate();\r\n  const params = useParams();\r\n  const [Display, setDisplay] = React.useState(true);\r\n  const [pro, setPro] = React.useState([]);\r\n  const [description, setDescription] = React.useState([]);\r\n  useEffect(() => {\r\n    axios.get(`http://127.0.0.1:5000/project/${params.id}`)\r\n      .then(response => {\r\n        setPro(response.data)\r\n      });\r\n    axios.get(`http://127.0.0.1:5000/csv/${params.id}`)\r\n      .then(response => { setDescription(response.data) })\r\n      .catch(err => {\r\n        // console.log(err)\r\n       \r\n      })\r\n          \r\n  }, [params.id]);\r\n  // console.log(description)\r\n  // console.log(pro)\r\n  // console.log(params.id)\r\n  if(description == null){\r\n    setDisplay(false)}\r\n  const [project, setProject] = React.useState({});\r\n  useEffect(() => {\r\n    axios.get(`http://sih-hydrateq.herokuapp.com/`)\r\n      .then(res => {\r\n        setProject(res.data.projects)\r\n        // console.log(res.data.project)\r\n      })\r\n      .catch(err => console.log(err))\r\n  }, [])\r\n  return (\r\n    <Box\r\n      minHeight=\"100vh\"\r\n      bgcolor=\"#F9F9F9\"\r\n    // sx={{ flexGrow: 1 }}\r\n    >\r\n{!Display ? (<Typography>No sample found in your data </Typography>):\r\n      (<div>\r\n      <Grid container spacing={2} >\r\n        <NewSidebar project={pro} all_projects={project} />\r\n        <Grid item xs={9} mr={1}>\r\n          <Stack spacing={2} mt={2}>\r\n            <Typography variant='h5' style={{ color: \"black\" }} align=\"center\"\r\n              sx={{ textDecoration: 'underline' }} > Visualization</Typography>\r\n            <Stack spacing={5}>\r\n              <GraphImage id={params.id} />\r\n            </Stack>\r\n            <Statistics desc={description} />\r\n          </Stack>\r\n        </Grid>\r\n      </Grid>\r\n      <Box mx={2} my={2} px={1} py={2} bgcolor=\"#D9D9D9\">\r\n        <Interpretaion />\r\n      </Box>\r\n      </div>)}\r\n    </Box>\r\n\r\n  )\r\n}\r\n\r\nexport default Analysis","C:\\Users\\shiva\\OneDrive\\Desktop\\hydrateq\\src\\components\\NewSidebar.js",["121","122","123"],"import React , {useEffect}from 'react'\r\nimport Grid from '@mui/material/Grid';\r\nimport Stack from '@mui/material/Stack';\r\nimport { Divider, Typography  ,Link} from '@mui/material';\r\nimport axios from 'axios';\r\nconst NewSidebar = (props) => {\r\n    // const [project,setProject] = React.useState(props.all_projects);\r\n    // useEffect(()=>{\r\n    //     axios.get(\"http://sih-hydrateq.herokuapp.com/\")\r\n    //     .then(res=>{\r\n    //         setProject(res.data.projects) \r\n    //     })\r\n    //     .catch(err=>console.log(err))\r\n    // },[])\r\n    // console.log(project)\r\n  return (\r\n    <Grid item xs={2}>\r\n          <Stack spacing={2} mt={5}>\r\n            <Typography  fontWeight=\"fontWeightBold\" variant='h5' style={{color:\"#6956E5\"}} align=\"center\" > Hydrateq</Typography>\r\n            <Stack spacing={2}>\r\n                <Divider/>\r\n            <Typography fontWeight=\"fontWeightBold\"  align=\"center\"> project: {props.project.project_name}</Typography>\r\n            <Divider/>\r\n            {/* <Typography ml={1}>ALL Projects</Typography>\r\n            {project.lenght ===0 ?\"\": project.map((project,index)=>{\r\n                return(\r\n                    <Typography align=\"center\" >{project[1]}</Typography>\r\n                        // <Link href=\"#\" underline=\"hover\">\r\n                        //             {project[1]}\r\n                        //     </Link>\r\n                )\r\n            })} */}\r\n          </Stack>\r\n          \r\n          </Stack>\r\n          \r\n        </Grid>\r\n  )\r\n}\r\n\r\nexport default NewSidebar","C:\\Users\\shiva\\OneDrive\\Desktop\\hydrateq\\src\\components\\Interpretaion.js",[],"C:\\Users\\shiva\\OneDrive\\Desktop\\hydrateq\\src\\components\\Dropzone.js",[],"C:\\Users\\shiva\\OneDrive\\Desktop\\hydrateq\\src\\components\\Imagelist.js",[],"C:\\Users\\shiva\\OneDrive\\Desktop\\hydrateq\\src\\components\\ButtonSelectGraph.js",[],"C:\\Users\\shiva\\OneDrive\\Desktop\\hydrateq\\src\\screens\\Prafull.js",["124","125"],"import React, { useCallback , useState} from \"react\";\r\nimport \"./prafull.css\";\r\nimport  Dropzone  from \"../components/Dropzone.js\";\r\nimport cuid from \"cuid\";\r\nimport ImageList from \"../components/Imagelist\";\r\nimport ButtonSelectGraph from \"../components/ButtonSelectGraph\";\r\nconst Prafull = () => {\r\n    const [images, setImages] = useState([]);\r\n    \r\n\r\n  const onDrop = useCallback((acceptedFiles) => {\r\n    // this callback will be called after files get dropped, we will get the acceptedFiles. If you want, you can even access the rejected files too\r\n     // Loop through accepted files\r\n     acceptedFiles.map(file => {\r\n        // Initialize FileReader browser API\r\n        const reader = new FileReader();\r\n        // onload callback gets called after the reader reads the file data\r\n        reader.onload = function(e) {\r\n          // add the image into the state. Since FileReader reading process is asynchronous, its better to get the latest snapshot state (i.e., prevState) and update it. \r\n          setImages(prevState => [\r\n            ...prevState,\r\n            { id: cuid(), src: e.target.result }\r\n          ]);\r\n        };\r\n        // Read the file as Data URL (since we accept only images)\r\n        reader.readAsDataURL(file);\r\n        return file;\r\n      });\r\n    }, []);\r\n   \r\n\r\n  return (\r\n    <>\r\n    <div className=\"cont\">\r\n    <div className=\"container-side\">\r\n    \r\n        <div className=\"logo side\"><img src=\"https://tse3.mm.bing.net/th?id=OIP.lCLulmLSKngZC3wJ3aLR2wHaF7&pid=Api&P=0\" alt=\"set\" className=\"logo\" /><b>Hydrateq</b></div>\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <div className=\"projects side\">Projects</div>\r\n        <div className=\"projects side\">DashBoard</div>\r\n        <hr />\r\n        <div className=\"side\"><img src=\"https://www.pikpng.com/pngl/m/82-827408_help-icon-png-play-button-icon-png-clipart.png\" alt=\"set\" className=\"icon\" /> Aqua</div>\r\n        <div className=\"side\"><img src=\"https://www.pikpng.com/pngl/m/82-827408_help-icon-png-play-button-icon-png-clipart.png\" alt=\"set\" className=\"icon\" /> Help</div>\r\n        <div className=\"side\"><img src=\"https://www.pikpng.com/pngl/m/112-1121340_settings-logo-png-white-png-download-setting-icon.png\" alt=\"set\" className=\"icon\" /> Setting</div>\r\n      </div>\r\n      <div className=\"dropzone-area  mt-5\">\r\n       <div className=\"dropzone-d\"> \r\n       \r\n        <Dropzone onDrop={onDrop}  accept={\"text/csv , application/pdf , image/*\"} /></div>\r\n\r\n        <div className=\"btn-generate\">Generate</div>\r\n      </div>\r\n      <div className=\"select-graph\">\r\n          <br />\r\n          <br />\r\n          <h5>Select The Graph to be Selected</h5>\r\n          <ButtonSelectGraph name_of_graph={\"PiperDiagram\"} />\r\n          <ButtonSelectGraph name_of_graph={\"Durov Diagram\"} />\r\n          <br />\r\n          <ButtonSelectGraph name_of_graph={\"Huffman Diagram\"} />\r\n          <ButtonSelectGraph name_of_graph={\"Dijkstra Diagram\"} />\r\n          <br />\r\n          <ButtonSelectGraph name_of_graph={\"Swalo Diagram\"} />\r\n          <ButtonSelectGraph name_of_graph={\"Djader Diagram\"} />\r\n          <br />\r\n          \r\n          <ButtonSelectGraph name_of_graph={\"Swalo Diagram\"} />\r\n          <ButtonSelectGraph name_of_graph={\"Djader Diagram\"} />\r\n          <br />\r\n      </div>\r\n        {/* <ImageList images={images} />   */}\r\n     \r\n    </div>\r\n    \r\n     \r\n    </>\r\n  );\r\n};\r\n\r\nexport default Prafull;\r\n",{"ruleId":"126","replacedBy":"127"},{"ruleId":"128","replacedBy":"129"},{"ruleId":"130","severity":1,"message":"131","line":2,"column":10,"nodeType":"132","messageId":"133","endLine":2,"endColumn":19},{"ruleId":"130","severity":1,"message":"134","line":4,"column":20,"nodeType":"132","messageId":"133","endLine":4,"endColumn":26},{"ruleId":"130","severity":1,"message":"135","line":7,"column":3,"nodeType":"132","messageId":"133","endLine":7,"endColumn":7},{"ruleId":"130","severity":1,"message":"136","line":9,"column":8,"nodeType":"132","messageId":"133","endLine":9,"endColumn":16},{"ruleId":"130","severity":1,"message":"137","line":1,"column":27,"nodeType":"132","messageId":"133","endLine":1,"endColumn":35},{"ruleId":"130","severity":1,"message":"138","line":5,"column":9,"nodeType":"132","messageId":"133","endLine":5,"endColumn":12},{"ruleId":"130","severity":1,"message":"139","line":6,"column":8,"nodeType":"132","messageId":"133","endLine":6,"endColumn":12},{"ruleId":"130","severity":1,"message":"140","line":9,"column":10,"nodeType":"132","messageId":"133","endLine":9,"endColumn":21},{"ruleId":"130","severity":1,"message":"141","line":9,"column":23,"nodeType":"132","messageId":"133","endLine":9,"endColumn":36},{"ruleId":"130","severity":1,"message":"142","line":11,"column":8,"nodeType":"132","messageId":"133","endLine":11,"endColumn":14},{"ruleId":"130","severity":1,"message":"143","line":12,"column":8,"nodeType":"132","messageId":"133","endLine":12,"endColumn":15},{"ruleId":"130","severity":1,"message":"144","line":13,"column":8,"nodeType":"132","messageId":"133","endLine":13,"endColumn":13},{"ruleId":"130","severity":1,"message":"145","line":14,"column":8,"nodeType":"132","messageId":"133","endLine":14,"endColumn":18},{"ruleId":"130","severity":1,"message":"146","line":15,"column":10,"nodeType":"132","messageId":"133","endLine":15,"endColumn":20},{"ruleId":"126","replacedBy":"147"},{"ruleId":"128","replacedBy":"148"},{"ruleId":"130","severity":1,"message":"149","line":18,"column":10,"nodeType":"132","messageId":"133","endLine":18,"endColumn":16},{"ruleId":"130","severity":1,"message":"150","line":19,"column":8,"nodeType":"132","messageId":"133","endLine":19,"endColumn":22},{"ruleId":"130","severity":1,"message":"151","line":3,"column":8,"nodeType":"132","messageId":"133","endLine":3,"endColumn":16},{"ruleId":"130","severity":1,"message":"152","line":4,"column":8,"nodeType":"132","messageId":"133","endLine":4,"endColumn":17},{"ruleId":"130","severity":1,"message":"153","line":5,"column":8,"nodeType":"132","messageId":"133","endLine":5,"endColumn":24},{"ruleId":"130","severity":1,"message":"154","line":6,"column":8,"nodeType":"132","messageId":"133","endLine":6,"endColumn":19},{"ruleId":"130","severity":1,"message":"155","line":7,"column":8,"nodeType":"132","messageId":"133","endLine":7,"endColumn":18},{"ruleId":"130","severity":1,"message":"137","line":1,"column":17,"nodeType":"132","messageId":"133","endLine":1,"endColumn":25},{"ruleId":"130","severity":1,"message":"156","line":2,"column":8,"nodeType":"132","messageId":"133","endLine":2,"endColumn":17},{"ruleId":"130","severity":1,"message":"157","line":3,"column":8,"nodeType":"132","messageId":"133","endLine":3,"endColumn":21},{"ruleId":"130","severity":1,"message":"158","line":4,"column":10,"nodeType":"132","messageId":"133","endLine":4,"endColumn":16},{"ruleId":"130","severity":1,"message":"159","line":6,"column":8,"nodeType":"132","messageId":"133","endLine":6,"endColumn":13},{"ruleId":"130","severity":1,"message":"160","line":1,"column":17,"nodeType":"132","messageId":"133","endLine":1,"endColumn":26},{"ruleId":"130","severity":1,"message":"135","line":4,"column":32,"nodeType":"132","messageId":"133","endLine":4,"endColumn":36},{"ruleId":"130","severity":1,"message":"161","line":5,"column":8,"nodeType":"132","messageId":"133","endLine":5,"endColumn":13},{"ruleId":"130","severity":1,"message":"156","line":5,"column":8,"nodeType":"132","messageId":"133","endLine":5,"endColumn":17},{"ruleId":"130","severity":1,"message":"162","line":8,"column":12,"nodeType":"132","messageId":"133","endLine":8,"endColumn":18},"no-native-reassign",["163"],"no-negated-in-lhs",["164"],"no-unused-vars","'Onbording' is defined but never used.","Identifier","unusedVar","'Router' is defined but never used.","'Link' is defined but never used.","'Projects' is defined but never used.","'useState' is defined but never used.","'Box' is defined but never used.","'clsx' is defined but never used.","'CssBaseline' is defined but never used.","'ThemeProvider' is defined but never used.","'Header' is defined but never used.","'Sidebar' is defined but never used.","'Graph' is defined but never used.","'Statistics' is defined but never used.","'makeStyles' is defined but never used.",["163"],["164"],"'Button' is defined but never used.","'UploadFileIcon' is defined but never used.","'Checkbox' is defined but never used.","'FormGroup' is defined but never used.","'FormControlLabel' is defined but never used.","'FormControl' is defined but never used.","'GraphImage' is defined but never used.","'ImageList' is defined but never used.","'ImageListItem' is defined but never used.","'styled' is defined but never used.","'Paper' is defined but never used.","'useEffect' is defined but never used.","'axios' is defined but never used.","'images' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]